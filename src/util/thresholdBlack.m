function [BW,maskedImage] = thresholdBlack(X)
%segmentImage Segment image using auto-generated code from imageSegmenter App
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter App. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 20-Feb-2020
%----------------------------------------------------


% Threshold image - adaptive threshold
BW = imbinarize(X, 'adaptive', 'Sensitivity', 1.000000, 'ForegroundPolarity', 'bright');

% Rectangle drawing
xPos = [78.3644 765.9388 765.9388 78.3644];
yPos = [16.4344 16.4344 130.2712 130.2712];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Polygon drawing
xPos = [586.5320 697.6367 753.1891 757.7426];
yPos = [131.1819 530.0662 520.9592 61.0584];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Polygon drawing
xPos = [210.4151 122.0777 43.7580 54.6863];
yPos = [129.3605 541.9052 495.4598 80.1830];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Polygon drawing
xPos = [135.7381 686.7084 700.3688 112.0601];
yPos = [463.5854 446.2822 513.6736 524.6020];
m = size(BW, 1);
n = size(BW, 2);
addedRegion = poly2mask(xPos, yPos, m, n);
BW = BW | addedRegion;

% Invert mask
BW = imcomplement(BW);

% Fill holes
BW = imfill(BW, 'holes');

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;